/*
   Project JaCaMo REST

   Gradle build file for JaCaMo Applications
   October 13, 2018 - 16:23:38
*/

plugins {
  id 'java'
  id 'eclipse'
  id 'maven-publish'
  id "com.benjaminsproule.swagger" version "1.0.8"
}

defaultTasks 'runDefault'

version '0.5'
group   'org.jacamo'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url "http://jacamo.sourceforge.net/maven2" }
    maven { url "https://raw.github.com/jacamo-lang/mvn-repo/master" }
    maven { url "https://repo.gradle.org/gradle/libs-releases-local" }
    flatDir {
       dirs 'lib'
    }
    mavenCentral()
}

dependencies {
	compile ('org.jacamo:jacamo:0.9') {
        exclude group: 'org.slf4j', module: 'slf4j-nop'
    }

	compile 'javax.xml.bind:jaxb-api:2.3.1'
	compile 'com.sun.xml.bind:jaxb-core:2.3.0.1'
	compile 'com.sun.xml.bind:jaxb-impl:2.3.1'

	compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.29.1'
	compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.29.1'
	compile 'org.glassfish.jersey.inject:jersey-hk2:2.29.1'
	compile group: 'org.glassfish.jersey', name: 'jersey-bom', version: '2.29.1', ext: 'pom'

	compile 'org.glassfish.jersey.core:jersey-server:2.29.1'
	compile 'org.glassfish.jersey.core:jersey-client:2.29.1'
	compile 'org.glassfish.jersey.media:jersey-media-multipart:2.29.1'

	compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.29.1'

	// containers:
	compile 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.29.1'
	compile 'org.glassfish.grizzly:grizzly-http-server:2.4.4'

	compile 'org.apache.zookeeper:zookeeper:3.5.4-beta'
	compile 'org.apache.curator:curator-framework:4.0.1'
	compile 'org.apache.curator:curator-x-async:4.0.1'

	compile group: 'guru.nidi', name: 'graphviz-java', version: '0.7.0'
	// https://mvnrepository.com/artifact/com.google.guava/guava
	compile group: 'com.google.guava', name: 'guava', version: '11.0.2'

	compile 'com.google.code.gson:gson:2.8.5'
	compile 'commons-io:commons-io:2.6'

	// https://mvnrepository.com/artifact/io.swagger/swagger-annotations
	compile 'io.swagger:swagger-annotations:1.6.1'

    //ADDED FOR ARTIFACTS
    compile 'org.apache.httpcomponents:httpclient:4.5.13'

	// https://mvnrepository.com/artifact/junit/junit
	testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    main {
        java {
            srcDir 'src/env'
            srcDir 'src/agt'
            srcDir 'src/org'
            srcDir 'src/main/java'
            srcDir 'src/libs'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}

task runDefault (type: JavaExec, dependsOn: 'classes') {
    group      ' JaCaMo'
    description 'runs the JaCaMo platform'
    doFirst {
        mkdir 'log'
    }
    main 'jacamo.infra.JaCaMoLauncher'
    args 'src/jcm/default.jcm'
    classpath sourceSets.main.runtimeClasspath
}

task run (type: JavaExec, dependsOn: 'classes') {
    group      ' JaCaMo'
    description 'runs the JaCaMo platform'
    doFirst {
        mkdir 'log'
    }
    main 'jacamo.infra.JaCaMoLauncher'
    classpath sourceSets.main.runtimeClasspath
}

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}


jar {
    baseName 'jacamo-rest'
    manifest {
      attributes(
        'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
        'Main-Class': 'jacamo.infra.JaCaMoLauncher',
        'args': 'src/jcm/default.jcm'
      )
    }
}

task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from(configurations.compile)
}

task stage(dependsOn: ['jar', 'copyToLib', 'clean']) {
	copyToLib.mustRunAfter clean
	jar.mustRunAfter copyToLib
}

stage.dependsOn(copyToLib)

// the following lines is used to avoid errors while generating javadoc
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    baseName 'jacamo-rest'
    classifier = 'javadoc'
    from '${docsDir}/../../doc/api'
}

task sourceJar (type : Jar) {
    baseName 'jacamo-rest'
    classifier = 'sources'
    from sourceSets.main.allSource
}

